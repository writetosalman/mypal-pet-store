{"version":3,"sources":["./src/$_gendir lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/my-pal/pet-add/pet-add.component.html","./src/app/my-pal/pet-add/pet-add.component.ts","./src/app/my-pal/pet-edit/pet-edit.component.html","./src/app/my-pal/pet-edit/pet-edit.component.ts","./src/app/my-pal/pet-list/pet-list.component.html","./src/app/my-pal/pet-list/pet-list.component.ts","./src/app/my-pal/pet-listing/pet-listing.component.html","./src/app/my-pal/pet-listing/pet-listing.component.ts","./src/app/my-pal/pet-view/pet-view.component.html","./src/app/my-pal/pet-view/pet-view.component.ts","./src/app/my-pal/pet.component.html","./src/app/my-pal/pet.component.ts","./src/app/my-pal/pet.service.ts","./src/app/my-pal/pet.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir lazy\n// module id = ./src/$$_gendir lazy recursive\n// module chunks = main","import { NgModule }                 from '@angular/core';\nimport { RouterModule, Routes }     from '@angular/router';\nimport { PetComponent }             from './my-pal/pet.component';\nimport { PetViewComponent }         from './my-pal/pet-view/pet-view.component';\nimport {PetEditComponent}           from \"./my-pal/pet-edit/pet-edit.component\";\nimport {PetAddComponent}            from \"./my-pal/pet-add/pet-add.component\";\n\nconst routes: Routes = [\n    { path: '',             redirectTo: 'pets',         pathMatch:  'full' },\n    { path: 'pets',         component: PetComponent },\n    { path: 'pets/add',     component: PetAddComponent },\n    { path: 'pet/:id',      component: PetViewComponent },\n    { path: 'pet/:id/edit', component: PetEditComponent },\n];\n@NgModule({\n    imports: [ RouterModule.forRoot(routes) ],\n    exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component }        from '@angular/core';\n\n@Component({\n  selector:     'app-root',\n  templateUrl:  './app.component.html',\n  styleUrls:    ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule }            from '@angular/platform-browser';\nimport { NgModule }                 from '@angular/core';\nimport { FormsModule, ReactiveFormsModule }\n                                    from '@angular/forms';\nimport { HttpModule }               from '@angular/http';\nimport { AppRoutingModule }         from './app-routing.module';\nimport { AngularFontAwesomeModule } from 'angular-font-awesome/angular-font-awesome';\n\nimport { AppComponent }             from './app.component';\nimport { PetComponent }             from './my-pal/pet.component';\nimport { PetService }               from './my-pal/pet.service';\nimport { PetListingComponent }      from './my-pal/pet-listing/pet-listing.component';\nimport { PetAddComponent }          from './my-pal/pet-add/pet-add.component';\nimport { PetListComponent }         from './my-pal/pet-list/pet-list.component';\nimport { PetViewComponent }         from './my-pal/pet-view/pet-view.component';\nimport { PetEditComponent }         from './my-pal/pet-edit/pet-edit.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PetComponent,\n    PetListingComponent,\n    PetAddComponent,\n    PetListComponent,\n    PetViewComponent,\n    PetEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    AppRoutingModule,\n    AngularFontAwesomeModule\n  ],\n  providers: [PetService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"<h3>Add a new pet</h3>\\n\\n<form id=\\\"idForm\\\" (submit)=\\\"onSubmit(salForm.value)\\\" [formGroup]=\\\"salForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"idBreed\\\">Breed</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"idBreed\\\" placeholder=\\\"Pet's breed\\\" required\\n      [formControl]=\\\"salForm.controls['breed']\\\">\\n      \\n      <span *ngIf=\\\"breed.hasError('required') && breed.touched\\\" class=\\\"badge badge-danger\\\">Pet's breed is required</span>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"idAge\\\">Age (months)</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"idAge\\\" placeholder=\\\"Age (in months)\\\" required\\n      [formControl]=\\\"salForm.controls['age']\\\">\\n\\n      <span *ngIf=\\\"!age.valid && age.touched\\\" class=\\\"badge badge-danger\\\">Pet's age should be a number</span>\\n      <span *ngIf=\\\"age.hasError('required') && age.touched\\\" class=\\\"badge badge-danger\\\">Pet's age is required</span>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"idName\\\">Name  (optional)</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"idName\\\" placeholder=\\\"Pet name (optional)\\\"\\n      [formControl]=\\\"salForm.controls['name']\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"idPrice\\\">Price (AU$)</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"idPrice\\\" placeholder=\\\"Price\\\" required\\n      [formControl]=\\\"salForm.controls['price']\\\">\\n\\n      <span *ngIf=\\\"!price.valid && price.touched\\\" class=\\\"badge badge-danger\\\">Price should be of format 9.99 or 9</span>\\n      <span *ngIf=\\\"price.hasError('required') && price.touched\\\" class=\\\"badge badge-danger\\\">Price is required</span>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"idListDate\\\">List Date</label>\\n      <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"idListDate\\\" placeholder=\\\"List Date\\\" required\\n      [formControl]=\\\"salForm.controls['listDate']\\\">\\n\\n      <span *ngIf=\\\"!listDate.valid && listDate.touched\\\" class=\\\"badge badge-danger\\\">Please enter a valid list date. Format DD-MMM-YYYY HH:mm</span>\\n      <span *ngIf=\\\"listDate.hasError('required') && listDate.touched\\\" class=\\\"badge badge-danger\\\">List date is required</span>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"idSaleDate\\\">Sale Date (optional)</label>\\n      <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"idSaleDate\\\" placeholder=\\\"\\\"\\n      [formControl]=\\\"salForm.controls['saleDate']\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div *ngIf=\\\"successMsg\\\" class=\\\"alert alert-success\\\" [innerHTML]=\\\"this.successMsg\\\"></div>\\n      <div *ngIf=\\\"errorMsg\\\" class=\\\"alert alert-danger\\\" [innerHTML]=\\\"this.errorMsg\\\"></div>\\n\\n      <button class=\\\"btn btn-primary\\\"> Save </button>\\n      <fa *ngIf=\\\"loading\\\" name=\\\"spinner\\\" animation=\\\"spin\\\" size=\\\"2x\\\"></fa>\\n\\n    </div>\\n\\n</form>\\n\\n<a href=\\\"\\\" (click)=\\\"goBack();\\\">&laquo; Back</a>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/my-pal/pet-add/pet-add.component.html\n// module id = ./src/app/my-pal/pet-add/pet-add.component.html\n// module chunks = main","import { Component, OnInit }                      from '@angular/core';\nimport { Location }                               from '@angular/common';\nimport {FormBuilder, Validators, AbstractControl} from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule }       from '@angular/forms';\nimport { PetService }                             from '../pet.service';\nimport { Pet }                                    from '../pet';\n\n@Component({\n  selector:     'app-pet-add',\n  templateUrl:  './pet-add.component.html',\n})\nexport class PetAddComponent implements OnInit {\n\n    public pet          = new Pet(0, '', 0, '', 0, 0, 0);\n    public errorMsg     = '';\n    public successMsg   = '';\n    public loading      = false;\n    public salForm;\n  \n    // Form Fields\n    breed:      AbstractControl;\n    age:        AbstractControl;\n    name:       AbstractControl;\n    price:      AbstractControl;\n    listDate:   AbstractControl;\n    saleDate:   AbstractControl;\n\n    constructor(\n        private _petService:      PetService,\n        private _fb:              FormBuilder,\n        private _location:        Location\n    ) {\n\n      // Get current date\n      const strDate  = new Date().toISOString().slice(0, 16);\n      //console.log('Date', strDate);\n\n      // Add some validation\n      this.salForm = _fb.group({\n            'breed':    ['', Validators.required],\n            'age':      ['', Validators.required],\n            'name':     [''],\n            'price':    ['', Validators.required],\n            'listDate': ['', Validators.required],\n            'saleDate': [''],\n      });\n\n\n      // We assign this.name after we’ve created ksForm with the FormBuilder\n      this.breed    = this.salForm.controls['breed'];\n      this.age      = this.salForm.controls['age'];\n      this.name     = this.salForm.controls['name'];\n      this.price    = this.salForm.controls['price'];\n      this.listDate = this.salForm.controls['listDate'];\n      this.saleDate = this.salForm.controls['saleDate'];\n    }\n\n    ngOnInit() {\n    }\n\n    /**\n     * This function handles the SUBMIT BUTTON event\n     * @param frm       any\n     *\n     */\n    public onSubmit(frm: any): void {\n          // console.log('Form submitted with values', frm);\n          // console.log('Single value', frm.breed);\n\n          if ( frm.breed === '' ) {\n              this.errorMsg = 'Breed is required. Cannot be empty.';\n              return;\n          }\n\n          this.loading      = true;\n          this.errorMsg     = '';\n          this.successMsg   = '';\n\n          // Setup form data\n          let formData  = new FormData();\n          formData.append('breed',      frm.breed);\n          formData.append('age',        frm.age);\n          formData.append('name',       frm.name);\n          formData.append('price',      frm.price);\n          formData.append('list_date',  frm.listDate);      // @todo Salman make sure date is converted fine\n          formData.append('sale_date',  frm.saleDate);\n\n          // Call the service for login\n          this._petService.addPet(formData).subscribe(\n              (success: any) => {                           // success json, if returned with http response status 200\n                  this.pet       = success as Pet;\n                  this.successMsg= 'Pet added to store successfully';\n              },\n              (error: any) => {                             // error json if returned with other http response status\n                  var res = JSON.parse(error._body);\n                  //console.log(res.error);\n                  this.errorMsg   = res.error;\n                  this.loading    = false;\n              },\n              () => {                                       // always called once completed\n                  this.loading    = false;\n              }\n          );\n    }\n\n    /**\n     * This function is used to handle the GO BACK event\n     */\n    public goBack() {\n        this._location.back();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/my-pal/pet-add/pet-add.component.ts","module.exports = \"<h3>Edit pet</h3>\\n\\n<div *ngIf=\\\"loading\\\">\\n  <fa *ngIf=\\\"loading\\\" name=\\\"spinner\\\" animation=\\\"spin\\\" size=\\\"2x\\\"></fa>\\n</div>\\n\\n<form id=\\\"idForm\\\" (submit)=\\\"onSubmitEdit(salForm.value)\\\" [formGroup]=\\\"salForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"idBreed\\\">Breed</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"idBreed\\\" placeholder=\\\"Pet's breed\\\" required\\n           [formControl]=\\\"salForm.controls['breed']\\\">\\n\\n    <span *ngIf=\\\"breed.hasError('required') && breed.touched\\\" class=\\\"badge badge-danger\\\">Pet's breed is required</span>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"idAge\\\">Age (months)</label>\\n    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"idAge\\\" placeholder=\\\"Age (in months)\\\" required\\n           [formControl]=\\\"salForm.controls['age']\\\">\\n\\n    <span *ngIf=\\\"!age.valid && age.touched\\\" class=\\\"badge badge-danger\\\">Pet's age should be a number</span>\\n    <span *ngIf=\\\"age.hasError('required') && age.touched\\\" class=\\\"badge badge-danger\\\">Pet's age is required</span>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"idName\\\">Name  (optional)</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"idName\\\" placeholder=\\\"Pet name (optional)\\\"\\n           [formControl]=\\\"salForm.controls['name']\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"idPrice\\\">Price (AU$)</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"idPrice\\\" placeholder=\\\"Price\\\" required\\n           [formControl]=\\\"salForm.controls['price']\\\">\\n\\n    <span *ngIf=\\\"!price.valid && price.touched\\\" class=\\\"badge badge-danger\\\">Price should be of format 9.99 or 9</span>\\n    <span *ngIf=\\\"price.hasError('required') && price.touched\\\" class=\\\"badge badge-danger\\\">Price is required</span>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"idListDate\\\">List Date</label>\\n    <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"idListDate\\\" placeholder=\\\"List Date\\\" required\\n           [formControl]=\\\"salForm.controls['listDate']\\\">\\n\\n    <span *ngIf=\\\"!listDate.valid && listDate.touched\\\" class=\\\"badge badge-danger\\\">Please enter a valid list date. Format DD-MMM-YYYY HH:mm</span>\\n    <span *ngIf=\\\"listDate.hasError('required') && listDate.touched\\\" class=\\\"badge badge-danger\\\">List date is required</span>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"idSaleDate\\\">Sale Date (optional)</label>\\n    <input type=\\\"datetime-local\\\" class=\\\"form-control\\\" id=\\\"idSaleDate\\\" placeholder=\\\"\\\"\\n           [formControl]=\\\"salForm.controls['saleDate']\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <div *ngIf=\\\"successMsg\\\" class=\\\"alert alert-success\\\" [innerHTML]=\\\"this.successMsg\\\"></div>\\n    <div *ngIf=\\\"errorMsg\\\" class=\\\"alert alert-danger\\\" [innerHTML]=\\\"this.errorMsg\\\"></div>\\n    <div class=\\\"row\\\">\\n      <fa *ngIf=\\\"isBtnPressed\\\" name=\\\"spinner\\\" animation=\\\"spin\\\" size=\\\"2x\\\"></fa>\\n    </div>\\n    <div class=\\\"\\\">\\n      <button class=\\\"btn btn-primary\\\"> Save </button>\\n    </div>\\n  </div>\\n\\n</form>\\n\\n\\n<a href=\\\"\\\" (click)=\\\"goBack();\\\">&laquo; Back</a>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/my-pal/pet-edit/pet-edit.component.html\n// module id = ./src/app/my-pal/pet-edit/pet-edit.component.html\n// module chunks = main","import { Component, OnInit, Input }               from '@angular/core';\nimport {FormBuilder, Validators, AbstractControl} from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule }       from '@angular/forms';\nimport { ActivatedRoute, Params }                 from '@angular/router';\nimport { Location }                               from '@angular/common';\nimport { PetService }                             from '../pet.service';\nimport { Pet }                                    from '../pet';\n\n@Component({\n  selector:     'app-pet-edit',\n  templateUrl:  './pet-edit.component.html',\n})\nexport class PetEditComponent implements OnInit {\n\n    private petId:      number;\n    private pet:        Pet;\n\n    public loading:    boolean;\n    public errorMsg:   string;\n    public successMsg  = '';\n    public isBtnPressed=false;\n\n    // FormBuilder\n    public salForm;\n\n    // Form Fields\n    breed:      AbstractControl;\n    age:        AbstractControl;\n    name:       AbstractControl;\n    price:      AbstractControl;\n    listDate:   AbstractControl;\n    saleDate:   AbstractControl;\n\n    constructor(\n      private _petService:      PetService,\n      private _fb:              FormBuilder,\n      private _route:           ActivatedRoute,\n      private _location:        Location\n    ) {\n      this.loading      = false;\n      this.isBtnPressed = false;\n      this.errorMsg     = '';\n\n      // Add some validation\n      this.salForm = this._fb.group({\n        'breed':    ['', Validators.required],\n        'age':      ['', Validators.required],\n        'name':     [''],\n        'price':    ['', Validators.required],\n        'listDate': ['', Validators.required],\n        'saleDate': [''],\n      });\n\n\n      // We assign this.name after we’ve created Form with the FormBuilder\n      this.breed    = this.salForm.controls['breed'];\n      this.age      = this.salForm.controls['age'];\n      this.name     = this.salForm.controls['name'];\n      this.price    = this.salForm.controls['price'];\n      this.listDate = this.salForm.controls['listDate'];\n      this.saleDate = this.salForm.controls['saleDate'];\n    }\n\n    ngOnInit() {\n\n        // Get pet id\n        this._route.params.forEach((params: Params) => {\n          this.petId = params['id'];\n          console.log('Pet ID '+this.petId);\n          this.getPet(this.petId);\n        });\n    }\n\n    /**\n     * This function gets a pet from the xml api\n     * @param id        number\n     *\n     */\n    private getPet(id: number) {\n\n        this.loading = true;\n\n        // Get pet details from api\n        this._petService.getPet(id).subscribe(\n            (success: any) => {                         // success json, if returned with http response status 200\n              this.loading    = false;\n              this.pet        = success as Pet;\n              console.log('getPet', this.pet);\n\n              // now we have got the pet object build the form\n              this.setFormValues();\n            },\n            (error: any) => {                           // error json if returned with other http response status\n              console.log('getPet() Error: ', error);\n\n              if ( error.status === 0 ) {\n                this.errorMsg = 'Unknown error happened while connecting to api.';\n\n              } else {\n                const res = JSON.parse(error._body);\n                this.errorMsg   = res.error;\n              }\n              this.loading    = false;\n            },\n            () => {                                     // always called once completed\n              this.loading    = false;\n            }\n        );\n    }\n\n    /**\n     * This function saves value to the formBuilder from the pet object\n     */\n    private setFormValues() {\n\n        const strListDate = new Date(this.pet.list_date).toISOString().slice(0, 16);\n        const strSaleDate = this.pet.sale_date ? new Date(this.pet.sale_date).toISOString().slice(0, 16) : '';\n\n        // We assign this.name after we’ve created ksForm with the FormBuilder\n        this.salForm.controls['breed'].setValue(this.pet.breed);\n        this.salForm.controls['age'].setValue(this.pet.age);\n        this.salForm.controls['name'].setValue(this.pet.name);\n        this.salForm.controls['price'].setValue(this.pet.price);\n        this.salForm.controls['listDate'].setValue(strListDate);\n        this.salForm.controls['saleDate'].setValue(strSaleDate);\n    }\n\n    /**\n     * This function is used to handle the GO BACK event\n     */\n    public goBack() {\n        this._location.back();\n    }\n\n    /**\n     * This is the function that handles the submit event for the Edit form\n     * @param  frm      any\n     */\n    public onSubmitEdit(frm: any): void {\n        // console.log('Edit Form submitted with values', frm);\n        // console.log('Single value', frm.breed);\n\n        if ( frm.breed === '' ) {\n          this.errorMsg = 'Breed is required. Cannot be empty.';\n          return;\n        }\n\n        this.isBtnPressed = true;\n        this.errorMsg     = '';\n        this.successMsg   = '';\n\n        // Setup put data\n        this.pet.breed      = frm.breed;\n        this.pet.age        = frm.age;\n        this.pet.name       = frm.name;\n        this.pet.price      = frm.price;\n        this.pet.list_date  = frm.listDate;\n        this.pet.sale_date  = frm.saleDate;\n\n        // Call the service for login\n        this._petService.editPet(this.petId, this.pet).subscribe(\n            (success: any) => {                           // success json, if returned with http response status 200\n              this.pet       = success as Pet;\n              this.successMsg= 'Pet edited successfully';\n            },\n            (error: any) => {                             // error json if returned with other http response status\n              var res = JSON.parse(error._body);\n              // console.log(res.error);\n              this.errorMsg   = res.error;\n            },\n            () => {                                       // always called once completed\n                this.isBtnPressed = false;\n            }\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/my-pal/pet-edit/pet-edit.component.ts","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-4\\\"><a [routerLink]=\\\"['/pet', pet.id]\\\" >{{pet.breed}}</a></div>\\n    <div class=\\\"col-3\\\">{{pet.name}}</div>\\n    <div class=\\\"col-2\\\"><a [routerLink]=\\\"['/pet', pet.id, 'edit']\\\" >Edit</a></div>\\n    <div class=\\\"col-3\\\"><a href=\\\"\\\" (click)=\\\"handleDelete()\\\">{{lblDelete}}</a></div>\\n</div>\\n<div *ngIf=\\\"errorMsg\\\" class=\\\"alert alert-danger\\\" [innerHTML]=\\\"this.errorMsg\\\"></div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/my-pal/pet-list/pet-list.component.html\n// module id = ./src/app/my-pal/pet-list/pet-list.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { PetService }               from '../pet.service';\nimport { Pet }                      from '../pet';\n\n@Component({\n  selector:     'app-pet-list',\n  templateUrl:  './pet-list.component.html',\n})\nexport class PetListComponent implements OnInit {\n\n    @Input() pet:   Pet;\n    @Input() pets:  Pet[];\n\n    public lblDelete: string;\n    public errorMsg:  string;\n\n    constructor(private _petService: PetService) {\n        this.lblDelete = 'Delete';\n    }\n\n    ngOnInit() {\n    }\n\n    /**\n     * This function handles the Delete form submit event\n     * @returns {boolean}\n     */\n    public handleDelete() {\n        //console.log('handleDelete()', this.pets);\n\n        this.lblDelete = 'Deleting';\n\n        this._petService.deletePet(this.pet.id).subscribe(\n            (success: any) => {                         // success json, if returned with http response status 200\n              this.lblDelete  = 'Deleted';\n              //console.log('Pet', this.pet);\n\n              // Remove from array\n              setTimeout (() => {\n                this.removeDeletePet(this.pet.id);\n              }, 400);\n            },\n            (error: any) => {                           // error json if returned with other http response status\n              console.log('getPet() Error: ', error);\n\n              if ( error.status === 0 ) {\n                this.errorMsg = 'Unknown error happened while connecting to api.';\n              }\n              else {\n                var res = JSON.parse(error._body);\n                this.errorMsg   = res.error;\n              }\n            }\n        );\n        return false;\n    }\n\n    /**\n     * This is the internal function. It updates the Pets array and remove the deleted one\n     * @param id\n     */\n    private removeDeletePet(id: number) {\n        const index = this.pets.map(function(e) {\n            return e.id;\n        }).indexOf(id);\n\n        if (index !== -1) {\n            this.pets.splice(index, 1);\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/my-pal/pet-list/pet-list.component.ts","module.exports = \"<div style=\\\"height:20px\\\"></div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <h3>List of Pets rescued</h3>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"loading\\\">\\n  <fa name=\\\"spinner\\\" animation=\\\"spin\\\" size=\\\"2x\\\"></fa>\\n</div>\\n\\n<div *ngIf=\\\"errorMsg\\\" class=\\\"alert alert-info\\\" role=\\\"alert\\\" [innerHTML]=\\\"this.errorMsg\\\">\\n</div>\\n\\n<div *ngIf=\\\"loading==false && pets\\\">\\n  <div class=\\\"row cssOdd\\\">\\n    <div class=\\\"col-4\\\"><b>Breed</b></div>\\n    <div class=\\\"col-3\\\"><b>Name</b></div>\\n    <div class=\\\"col-2\\\"></div>\\n    <div class=\\\"col-3\\\"></div>\\n  </div>\\n  <app-pet-list\\n  *ngFor=\\\"let pet of pets\\n  let index = index;\\n  let isOdd = odd;\\n  let isEven= even;\\\"\\n  [pet] =\\\"pet\\\"\\n  [pets]=\\\"pets\\\"\\n\\n  [ngClass]=\\\"{ cssOdd: isOdd, cssEven: isEven }\\\"\\n  ></app-pet-list>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/my-pal/pet-listing/pet-listing.component.html\n// module id = ./src/app/my-pal/pet-listing/pet-listing.component.html\n// module chunks = main","/**\n * This is the component to get all the pets and pass to child PetListComponent to draw list\n *\n */\nimport { Component, OnInit }  from '@angular/core';\nimport { PetService }         from '../pet.service';\nimport { Pet }                from '../pet';\n\n@Component({\n  selector:     'app-pet-listing',\n  templateUrl:  './pet-listing.component.html',\n})\nexport class PetListingComponent implements OnInit {\n\n    public pets:    Pet[]    = [];\n    public loading: boolean  = false;\n    public errorMsg:string   = '';\n\n    constructor(private _petService: PetService) {\n\n      this.loading = false;\n      this.errorMsg= '';\n    }\n\n    /**\n     * All heavy lifting is done on the ngOnInit and not in construction.\n     * Get all the pets\n     *\n     */\n    ngOnInit() {\n        // start loading\n        this.loading = true;\n\n        this._petService.getPets().subscribe(\n                (success: any) => {                         // success json, if returned with http response status 200\n                    this.pets       = success;\n                    this.loading    = false;\n                    // console.log('getPets()', this.pets);\n                },\n                (error: any) => {                           // error json if returned with other http response status\n                    var res = JSON.parse(error._body);\n                    this.pets       = [];\n                    this.errorMsg   = res.error;\n                    this.loading    = false;\n                    // console.log('getPets()', this.errorMsg);\n                },\n                () => {                                     // always called once completed\n                    this.loading    = false;\n                }\n            );\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/my-pal/pet-listing/pet-listing.component.ts","module.exports = \"<h2>Pet's Details</h2>\\n\\n<fa *ngIf=\\\"loading\\\" name=\\\"spinner\\\" animation=\\\"spin\\\" size=\\\"2x\\\"></fa>\\n<div *ngIf=\\\"errorMsg\\\" class=\\\"alert alert-danger\\\" [innerHTML]=\\\"this.errorMsg\\\"></div>\\n\\n<div *ngIf=\\\"loading == false && pet !== null\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">Breed</div>\\n    <div class=\\\"col-6\\\"><b>{{pet.breed}}</b></div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">Age</div>\\n    <div class=\\\"col-6\\\">{{pet.age}} months</div>\\n  </div>\\n\\n  <div *ngIf=\\\"pet !== null\\\" class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">Name</div>\\n    <div class=\\\"col-6\\\">{{pet.name}}</div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">Price</div>\\n    <div class=\\\"col-6\\\">AU$ {{pet.price}}</div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">List Date</div>\\n    <div class=\\\"col-6\\\">{{ pet.list_date }}</div>\\n  </div>\\n\\n  <div *ngIf=\\\"pet.sale_date!==null\\\" class=\\\"row\\\">\\n    <div class=\\\"col-6\\\">Sale Date</div>\\n    <div class=\\\"col-6\\\">{{ pet.sale_date }}</div>\\n  </div>\\n</div>\\n\\n<a href=\\\"\\\" (click)=\\\"goBack();\\\">&laquo; Back</a>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/my-pal/pet-view/pet-view.component.html\n// module id = ./src/app/my-pal/pet-view/pet-view.component.html\n// module chunks = main","/**\n * This component is used to draw a single pet view\n *\n */\nimport { Component, OnInit, Input }               from '@angular/core';\nimport { ActivatedRoute, Params }                 from '@angular/router';\nimport { Location }                               from '@angular/common';\nimport { PetService }                             from '../pet.service';\nimport { Pet }                                    from '../pet';\n\n@Component({\n  selector:     'app-pet-view',\n  templateUrl:  './pet-view.component.html',\n})\nexport class PetViewComponent implements OnInit {\n\n    public petId:    number;\n    public pet:      Pet;\n\n    public loading:  boolean;\n    public errorMsg: string;\n\n    constructor(\n        private _petService:      PetService,\n        private _route:           ActivatedRoute,\n        private _location:        Location\n    ) {\n        this.loading = false;\n        this.errorMsg= '';\n    }\n\n    ngOnInit() {\n\n        // Get pet id\n        this._route.params.forEach((params: Params) => {\n            this.petId = params['id'];\n            console.log('Pet ID '+this.petId);\n            this.getPet(this.petId);\n        });\n\n    }\n\n    /**\n     * This is the function that get a single pet and display in view\n     * @param id        Number\n     */\n    private getPet(id: number) {\n\n        this.loading = true;\n\n        // Get pet details from api\n        this._petService.getPet(id).subscribe(\n            (success: any) => {                         // success json, if returned with http response status 200\n                this.loading    = false;\n                this.pet        = success as Pet;\n                console.log('Pet', this.pet);\n            },\n            (error: any) => {                           // error json if returned with other http response status\n                console.log('getPet() Error: ', error);\n\n                if ( error.status === 0 ) {\n                  this.errorMsg = 'Unknown error happened while connecting to api.';\n                }\n                else {\n                  var res = JSON.parse(error._body);\n                  this.errorMsg   = res.error;\n                }\n                this.loading    = false;\n            },\n            () => {                                     // always called once completed\n                this.loading    = false;\n            }\n        );\n    }\n\n    /**\n     * This function is used to handle the GO BACK event\n     */\n    public goBack() {\n        this._location.back();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/my-pal/pet-view/pet-view.component.ts","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-pet-listing></app-pet-listing>\\n  </div>\\n</div>\\n\\n<br/><a [routerLink]=\\\"['/pets/add']\\\" >Add New Pet</a>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/my-pal/pet.component.html\n// module id = ./src/app/my-pal/pet.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector:     'app-pet',\n  templateUrl:  './pet.component.html',\n})\nexport class PetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/my-pal/pet.component.ts","/**\n * This is the Pet Service\n * It connects with the XML API to get the data\n *\n */\nimport { Injectable }               from '@angular/core';\nimport { Router }                   from '@angular/router';\nimport { Headers, Http }            from '@angular/http';\n\nimport { Pet }                      from './pet';\n\nimport { Observable }               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class PetService {\n\n    private petUrl    = 'http://localhost:8000/api/';  // URL to web api\n    private headers   = new Headers({'Content-Type': 'application/json'});\n\n    // constructor so that we can get instance of http & router\n    constructor(\n        private http: Http,\n        private _router: Router\n    ) { }\n\n    /**\n     * This function gets all the pets from the database\n     *\n     * @returns         {Observable<R>}\n     */\n    getPets() : Observable<Pet[]> {\n\n        return this.http.get(this.petUrl + 'pets')\n                // .map() is a transformer that will transform the result to whatever you return (in your case .json()) before it's passed to the callback\n                // here we map the response.json to Pet array\n                .map(response => response.json() as Pet[]);\n    }\n\n    /**\n     * This function get details about a single pet from database\n     * @param id        number\n     * @returns         {Observable<R>}\n     */\n    getPet(id: number): Observable<Pet> {\n\n        const url = this.petUrl + 'pet/' + id;\n\n        return this.http.get(url)\n            .map(response => response.json() as Pet);\n    }\n\n    /**\n     * This function deletes a single pet from the database\n     * @param id        number\n     * @returns         {Observable<R>}\n     */\n    deletePet(id: number): Observable<Pet> {\n\n        const url = this.petUrl + 'pet/' + id;\n\n        return this.http.delete(url, {headers: this.headers})\n            .map(response => response.json() as Pet);\n    }\n\n    /**\n     * This is the function to edit a single pet from database\n     * @param petId     number\n     * @param pet       pet object\n     * @returns         {Observable<R>}\n     */\n    editPet(petId: number, pet: Pet): Observable<Pet> {\n        //console.log('editPet', JSON.stringify(pet));\n\n        return this.http\n          .put(this.petUrl + 'pet/' + petId, JSON.stringify(pet), {headers: this.headers})\n          .map(response => response.json() as Pet);\n    }\n\n    /**\n     * This is the function to add a pet to the database\n     * @param   frm     FormData\n     * @returns         {Observable<R>}\n     */\n    addPet(frm: FormData): Observable<Pet> {\n      return this.http\n          .post(this.petUrl + 'pet', frm)\n          .map(response => response.json() as Pet);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/my-pal/pet.service.ts","/**\n * This is the pet class\n * It holds all the pet attributes\n *\n */\nexport class Pet {\n\n    constructor(\n        public id:                  number,\n        public breed:               string,\n        public age:                 number,\n        public name:                string,\n        public price:               number,\n        public list_date:           number,\n        public sale_date:           number\n    ) { }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/my-pal/pet.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}